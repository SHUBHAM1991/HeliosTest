<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 	
	<!-- This is where we configure Spring-Security  -->
	<security:http pattern="/resources/**" security='none' />
	<security:http pattern="/assets/**" security='none' />
	<security:http pattern="/favicon.ico" security='none' />
	<security:http pattern="/images/**" security='none' />
	
	
	<security:http auto-config="true" use-expressions="true" access-decision-manager-ref="stapleAccessDecisionManager" entry-point-ref="openssoAuthenticationEntryPoint" access-denied-page="/accessDenied">	
		<!-- <security:intercept-url pattern="/member" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/viewHeliosCoupon" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/viewupdatecommlog" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/salesSum" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/viewUnEnrolledSales" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/courtesyCoupon" access="hasAnyRole('ADMIN','CSM','CSR','CSS','REHD')"/>
		<security:intercept-url pattern="/memberEnrollment" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/linkUnlink" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/addAReceipt" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/masterSub" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/inkRecycling" access="hasAnyRole('ADMIN','BDP','CSM','CSR','CSS','REHD','SAM')"/>
		<security:intercept-url pattern="/maintainUserRole" access="hasAnyRole('ADMIN','CSM','CSS')"/> -->
		
		<security:custom-filter position="PRE_AUTH_FILTER" ref="openssoFilter"/>
		
		<security:session-management session-fixation-protection="migrateSession"/>
		</security:http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="preAuthAuthProvider" />	
	</security:authentication-manager>
	
	<beans:bean id="preAuthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
    	<beans:property name="preAuthenticatedUserDetailsService">
      		 <beans:bean id="userDetailsServiceWrapper" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
        		<beans:property name="userDetailsService" ref="userDetailsService"/>
      		</beans:bean>     
    	</beans:property>
    </beans:bean>

	<beans:bean id="openssoAuthenticationEntryPoint"	class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

	<beans:bean id="openssoFilter" class = "com.staples.dashboard.app.filter.OpenSSOFilter">
		<beans:property name="principalRequestHeader" value="EMPL_ID" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="exceptionIfHeaderMissing" value="false" />
	  
	</beans:bean>

	
	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<beans:bean id="userDetailsService" class="com.staples.dashboard.app.service.OpenSSOUserDetailsService" autowire="byType" />
	

    <beans:bean class="com.staples.dashboard.app.filter.FilterInvocationServiceSecurityMetadataSourceBeanPostProcessor">
        <beans:property name="metadataSource">
           <beans:bean class="com.staples.dashboard.app.filter.MyFilterInvocationSecurityMetadataSource">
           </beans:bean>
        </beans:property>
     </beans:bean>
     
     <beans:bean id="stapleAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
         <beans:property name="decisionVoters">
          <beans:list>
            <beans:ref bean="webExpressionVoter"/>
          </beans:list>
        </beans:property>
      </beans:bean>
     
     <beans:bean id="webExpressionVoter" class="com.staples.dashboard.app.filter.PublicWebExpressionConfigAttribute"/>

	

</beans:beans>
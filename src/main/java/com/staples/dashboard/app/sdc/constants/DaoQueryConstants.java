package com.staples.dashboard.app.sdc.constants;

public class DaoQueryConstants {
	
	public static final String NativeQueryForSSID = "SELECT CR.CUSTEXOREFERENCENUMBER sourceSystemId " +
													  "FROM CEX01_OWN.CUSTEXOREFERENCE CR " +
													 "WHERE CR.CUSTEXOREFERENCETYPEID = 3 " +
													   "AND CR.SOURCEREFERENCENAME = ?";
	//CUST ORDERS
	/*public static String CUSTOMER_TRANSACTIONS= "select distinct st.SOURCENUMBER,st.MASTERNUMBER,st.TRANREWARDNUMBER,st.SOURCESYSTEMID,st.TRANSTATUS,"
			+ "st.RECORDTYPE,st.INSERTDATE,  NVL(st.BILLTOFIRSTNAME,SAM.FIRST_NAME) AS BILLTOFIRSTNAME, "
			+ "NVL(st.BILLTOLASTNAME,SAM.LAST_NAME) AS BILLTOLASTNAME, st.SALESTRANID ,st.TRANAMOUNT,st.ORDERTRANDATE ,"
			+ "sd.MASTERSALESTRANID,SUM( CASE WHEN st.SOURCESYSTEMID =102 THEN 0 ELSE SD.EXTENDEDPRICE END) AS EXTENDEDPRICE "
			+ "from CEX01_OWN.SALESTRAN st "
			+ "left join CEX01_OWN.SALESTRANDETAIL sd on (st.SALESTRANID=sd.SALESTRANID) "
			+ "left outer join HELIOS_OWN.SAM_CUSTOMER_PROFILE sam on (st.TRANREWARDNUMBER = LPAD(sam.REWARDS_NUMBER,10,'0') or st.MASTERNUMBER = LPAD(sam.REWARDS_NUMBER,10,'0')) "
			+ "where (st.SOURCESYSTEMID =? OR st.SOURCESYSTEMID ='107' ) "
			+ "and st.ORDERTRANDATE between to_date(?) and to_date(?) "
			+ "AND (st.MASTERNUMBER IN (:mIds) OR st.TRANREWARDNUMBER IN (:rIds)) GROUP BY st.SOURCENUMBER,  st.MASTERNUMBER,  st.TRANREWARDNUMBER, "
			+ "st.SOURCESYSTEMID,  st.TRANSTATUS,  st.RECORDTYPE,  st.INSERTDATE,   NVL(st.BILLTOFIRSTNAME,SAM.FIRST_NAME) , "
			+ "NVL(st.BILLTOLASTNAME,SAM.LAST_NAME) ,  st.SALESTRANID ,  st.TRANAMOUNT, "
			+ "st.ORDERTRANDATE ,  sd.MASTERSALESTRANID order by st.ORDERTRANDATE DESC ";*/
	public static String CUSTOMER_TRANSACTIONS = "SELECT DISTINCT  st.SOURCENUMBER,  st.MASTERNUMBER, st.TRANREWARDNUMBER, st.SOURCESYSTEMID, st.TRANSTATUS, st.RECORDTYPE,"
			+ " st.INSERTDATE,  NVL (st.BILLTOFIRSTNAME, 'Not ') AS BILLTOFIRSTNAME, NVL (st.BILLTOLASTNAME, 'Available') AS BILLTOLASTNAME, st.SALESTRANID, st.TRANAMOUNT, st.ORDERTRANDATE,"
			+ " sd.MASTERSALESTRANID,   SUM ( CASE WHEN st.SOURCESYSTEMID = 102 THEN 0 ELSE SD.EXTENDEDPRICE END)  AS EXTENDEDPRICE  FROM CEX01_OWN.SALESTRAN st  LEFT JOIN CEX01_OWN.SALESTRANDETAIL sd"
			+ " ON (st.SALESTRANID = sd.SALESTRANID)  WHERE     (st.SOURCESYSTEMID =? OR st.SOURCESYSTEMID = '107') AND TRUNC(st.ORDERTRANDATE) BETWEEN TO_DATE (?,'DD-MON-YYYY')"
			+ " AND TO_DATE (?,'DD-MON-YYYY')    AND (   st.MASTERNUMBER IN (:mIds)   OR st.TRANREWARDNUMBER IN (:rIds))"
			+ " GROUP BY st.SOURCENUMBER,    st.MASTERNUMBER,  st.TRANREWARDNUMBER, st.SOURCESYSTEMID,  st.TRANSTATUS,  st.RECORDTYPE,  st.INSERTDATE,  NVL (st.BILLTOFIRSTNAME, 'Not '),"
			+ "  NVL (st.BILLTOLASTNAME, 'Available'),  st.SALESTRANID, st.TRANAMOUNT,  st.ORDERTRANDATE,   sd.MASTERSALESTRANID ORDER BY st.ORDERTRANDATE DESC";
	
	/*public static String CUSTOMER_TRANSACTIONS = "SELECT DISTINCT st.SOURCENUMBER, st.MASTERNUMBER, st.TRANREWARDNUMBER, st.SOURCESYSTEMID, st.TRANSTATUS, st.RECORDTYPE,  st.INSERTDATE,"
	  +" NVL (st.BILLTOFIRSTNAME, 'Not ')     AS BILLTOFIRSTNAME,  NVL (st.BILLTOLASTNAME, 'Available') AS BILLTOLASTNAME,  st.SALESTRANID,"
	  +" st.TRANAMOUNT,  st.ORDERTRANDATE,  sd.MASTERSALESTRANID, SUM ("
	  +" CASE   WHEN st.SOURCESYSTEMID = 102  THEN 0   ELSE SD.EXTENDEDPRICE END) AS EXTENDEDPRICE FROM CEX01_OWN.SALESTRAN st LEFT JOIN CEX01_OWN.SALESTRANDETAIL sd   ON (st.SALESTRANID       = sd.SALESTRANID)"
	+" WHERE (st.SOURCESYSTEMID =? OR st.SOURCESYSTEMID     = '107') AND st.ORDERTRANDATE BETWEEN TO_DATE (?,'DD-MON-YYYY') AND TO_DATE (?,'DD-MON-YYYY')"
	+" AND ( st.MASTERNUMBER  IN (:mIds) OR st.TRANREWARDNUMBER IN (:rIds))   GROUP BY st.SOURCENUMBER,"
	  +" st.MASTERNUMBER,  st.TRANREWARDNUMBER,  st.SOURCESYSTEMID,  st.TRANSTATUS,  st.RECORDTYPE,  st.INSERTDATE,  st.BILLTOFIRSTNAME,  st.BILLTOLASTNAME,"
	  +" st.SALESTRANID,  st.TRANAMOUNT,  st.ORDERTRANDATE,  sd.MASTERSALESTRANID ORDER BY st.ORDERTRANDATE DESC";*/

	
	//ORDER DETAILS
	public static final String QUERY_FOR_ORDER_ITEMS=" with curr_trans as(SELECT ST.SALESTRANID salesTranId, " +
			  "ST.MASTERNUMBER customerNumber, " +
              "ST.RECORDTYPE recordType, " +
			  "ST.SOURCENUMBER orderNo, " +
			  "ST.SOURCEHEADERKEY orderHeaderKey, " +
			  "ST.ENTERPRISECODE enterpriseCode, " +
			  "ST.DIVISIONCODE divisionCode, " +
			  "ST.EXTNORDERCHANNEL orderChannel, " +
			  "ST.EXTNSUBSCRIPTIONID subscriptionID, " +
			  "ST.ORDERTRANDATE orderDate, " +
			  "ST.TRANSTATUS orderStatusDesc, " +
			  "ST.TRANAMOUNT,"+
			  "ST.TRANMETHOD orderMethod, " +
			  "ST.CUSTOMERPONUMBER customerPONumber, " +
			  "ST.BILLTOID billtoId, " +
			  "ST.BILLTOFIRSTNAME billToFirstName, " +
			  "ST.BILLTOLASTNAME billToLastName, " +
			  "ST.BILLTOCOMPANY billToCompany, " +
			  "ST.BILLTOADDRESS1 billToAddressLine1, " +
			  "ST.BILLTOADDRESS2 billToAddressLine2, " +
			  "ST.BILLTOADDRESS3 billToAddressLine3, " +
			  "ST.BILLTOCITY billToCity, " +
			  "ST.BILLTOSTATE billToState, " +
			  "ST.BILLTOZIP billToZipCode, " +
			  "ST.SHIPTOZIP shipToZipCode ," +
			  "ST.SOURCESYSTEMID,"
			  + "ST.INSERTDATE,"
			  + "SD.SALESTRANID itemSalesTranId,SD.SALESTRANLINEITEMID,SD.PRODUCTDEPTNUMBER,SD.PRODUCTSUBCLASSNUMBER,"
			  + "SD.PRODUCTCLASSNUMBER,SD.PRODUCTSKU,SD.LINETOTALAMOUNT,SD.TRANQUANTITY, "
			  + "SD.PRODUCTNAME ,SD.MASTERSALESTRANID,SD.TRANLINESTATUSID,CASE WHEN st.SOURCESYSTEMID =102 THEN 0 ELSE SD.EXTENDEDPRICE END AS EXTENDEDPRICE, "
			  + "SH.DIVISION,SH.CLASS_ID ,"+
			  //"sts.DETAILSTATUSCODE,sts.DETAILSTATUSDESCRIPTION,"+
			   "sts.DETAILSTATUSCODE,sts.DETAILSTATUSDESCRIPTION,sts.salestrandetailid,RANK() OVER "
			   + "(PARTITION BY sts.salestrandetailid ORDER BY sts.detailstatusdate DESC) latest "+
			  "from CEX01_OWN.SALESTRANDETAIL SD INNER JOIN CEX01_OWN.SALESTRAN ST on "
			+ "(SD.SALESTRANID=ST.SALESTRANID and ST.SOURCESYSTEMID IN (?1) and ST.SOURCENUMBER IN (?2)) "
			//+ "left outer join CEX01_OWN.PRODUCT product on (sd.productSKU=product.productSKU) "
			+ "left outer join HELIOS_OWN.SDC_PRODUCT_HIERARCHY SH on SD.PRODUCTCLASSNUMBER = SH.CLASS_ID "
			+ "left outer join CEX01_OWN.SALESTRANDETAILSTATUS STS on (sd.SALESTRANLINEITEMID=sts.SALESTRANDETAILID)) "
			//+"left outer join CEX01_OWN.SALESTRANDETAILSTATUS sts on (sd.SALESTRANLINEITEMID=sts.SALESTRANDETAILID and sts.detailstatusquantity>0) "
			//+ "left outer join CEX01_OWN.shipment SHIP on (sd.SALESTRANID = SHIP.SALESTRANID)) "
			+ " select * from curr_trans where latest = 1";
		
	
//COUPON LINE ITEMS	
	public static final String  NativeQueryForLineCoupon= "SELECT DISTINCT CLI.SALESTRANID salesTranId, " +
	                                                                        "CLI.COUPONLINEAMOUNT couponLineAmount," +
																   			"CLI.SALESTRANDETAILID salesTranDetailId, " +
																   			"CLI.COUPONTOTALAMOUNT couponTotalAmount, " +
																   			"CLI.COUPONDESCRIPTION couponDescription, " +
																   			"CLI.COUPONOFFERCODE couponOfferCode " +
																   			
																   	  "FROM CEX01_OWN.COUPONLINEITEMASSOC CLI INNER JOIN CEX01_OWN.SALESTRANLINEITEM STLI " +
																        "ON (CLI.SALESTRANID = STLI.SALESTRANID AND " +
																	        "CLI.COUPONLINEITEMID = STLI.SALESTRANLINEITEMID) " +
																	  "WHERE CLI.SALESTRANID IN (?1)";
	//DISCOUNT LINE ITEMS
	public static final String NativeQueryForLineDiscount = "SELECT DISTINCT DLI.SALESTRANID salesTranId, " +
   																	"DLI.SALESTRANDETAILID salesTranDetailId, " +
   																	"DLI.DISCOUNTLINEITEMID discountLineItemId, " +
   																	"STLI.SOURCEDETAILID2 orderLineKey, " +
   																	"DLI.DISCOUNTTYPE discountType, " +
   																	"DLI.DISCOUNTNUMBER discountNo, " +
   																	"DLI.DISCOUNTDESCRIPTION discountDesc, " +
   																	"DLI.EXTNLONGDESCRIPTION discountLongDesc, " +
   																	"DLI.DISCOUNTPERCENTAGE discountPercentage, " +
   																	"DLI.DISCOUNTTOTALAMOUNT discountAmount " +
   																	"FROM CEX01_OWN.DISCOUNTLINEITEMASSOC DLI INNER JOIN CEX01_OWN.SALESTRANLINEITEM STLI " +
   																	"ON (DLI.SALESTRANID = STLI.SALESTRANID AND " +
   																	"DLI.DISCOUNTLINEITEMID = STLI.SALESTRANLINEITEMID) " +
   																	"WHERE DLI.SALESTRANID IN (?1) ";
																	//  + " AND STLI.SALESTRANLINEITEMTYPECODE = '04'";
	//LIST OF LOCATION VALUES --code using but dao not using..to be removed later
	public static final String NativeQueryShipToForSales = "SELECT STD.SALESTRANID salesTranId, " +
																"STD.SALESTRANLINEITEMID salesTranLineItemId, " +
																"STD.SOURCEDETAILKEY orderLineKey, " +
																"STD.SOURCESHIPTOID shipToKey, " +         
																"STD.TRANLINETYPE orderLineType, " +
																"STD.SHIPTOCOMPANY shipToCompany, " +
																"STD.SHIPTOFIRSTNAME shipToFirstName, " +                                
																"STD.SHIPTOLASTNAME shipToLastName, " +
																"STD.SHIPTOADDRESS1 shipToAddressLine1, " +
																"STD.SHIPTOADDRESS2 shipToAddressLine2, " +
																"STD.SHIPTOADDRESS3 shipToAddressLine3, " +
																"STD.SHIPTOCITY shipToCity, " +
																"STD.SHIPTOSTATE shipToState, " +
																"STD.SHIPTOZIP shipToZipCode " +
																"FROM CEX01_OWN.SALESTRANDETAIL STD " +
																"WHERE STD.SALESTRANID = ?";
	
	//TO FIND OUT CHAILD ORDER ---- code using need to be remove later
	public static final String QUERY_FOR_ORDER_PARENT_CHILDS="select PC.PARENT_NUMBER,PC.CHILD_NUMBER,st.SOURCENUMBER"
			+ " from CEX01_OWN.salestran st inner join helios_own.SA_PARENT_CHILD  PC on "
			+ "(st.masternumber=PC.parent_number OR st.TRANREWARDNUMBER=PC.PARENT_NUMBER "
			+ "OR st.masternumber=PC.child_number "
			+ "OR st.TRANREWARDNUMBER=PC.child_number) where st.sourcenumber in (?1)";
	

	public static final String QUERY_SOURCENOS_FOR_TRANIDS = "SELECT SOURCENUMBER FROM CEX01_OWN.SALESTRAN WHERE SALESTRANID IN (?1)";
	
	public static final String QUERY_SOURCENOS_FOR_MASTERTRANIDS = "SELECT ST.SOURCENUMBER from CEX01_OWN.SALESTRAN ST left join CEX01_OWN.SALESTRANDETAIL SD "
			+ "on (ST.SALESTRANID=SD.SALESTRANID)  WHERE SD.MASTERSALESTRANID=?";
	
	//LIST OF CHAILDS
	
/*	old SQL
 * public static final String QUERY_PARENT_CHILDS="WITH CHILD_NUMS AS (SELECT DISTINCT TBL.PARENT_NUMBER, all_nodes FROM CEX01_OWN.SALESTRAN ST,"
			+ " (SELECT ALL_NODES, PARENT_NUMBER FROM (SELECT b.CHILD_NUMBER AS All_nodes, b.PARENT_NUMBER FROM helios_OWN.SA_PARENT_CHILD b, "
			+ "(SELECT ? REWARDS_NUMBER_C FROM dual ) a WHERE b.PARENT_NUMBER = a.REWARDS_NUMBER_C UNION SELECT a.REWARDS_NUMBER_C AS "
			+ "All_nodes, a.REWARDS_NUMBER_C AS PARENT_NUMBER FROM (SELECT ? REWARDS_NUMBER_C FROM dual ) a ) ) TBL WHERE "
			+ "(TBL.ALL_NODES = ST.MASTERNUMBER OR TBL.ALL_NODES = ST.TRANREWARDNUMBER OR LPAD(TBL.ALL_NODES,10,'0') = ST.MASTERNUMBER OR "
			+ "LPAD(TBL.ALL_NODES,10,'0') = ST.TRANREWARDNUMBER)) SELECT PARENT_NUMBER,ALL_NODES FROM CHILD_NUMS UNION"
			+ " SELECT PARENT_NUMBER,LPAD(ALL_NODES,10,'0') AS ALL_NODES FROM CHILD_NUMS";

*/	
	public static final String QUERY_PARENT_CHILDS="WITH CHILD_NUMS AS (SELECT DISTINCT TBL.PARENT_NUMBER, all_nodes FROM CEX01_OWN.SALESTRAN ST,"
			+ " (SELECT ALL_NODES, PARENT_NUMBER FROM (SELECT b.CHILD_NUMBER AS All_nodes, b.PARENT_NUMBER FROM helios_OWN.SA_PARENT_CHILD b, "
			+ "(SELECT ? REWARDS_NUMBER_C FROM dual ) a WHERE b.PARENT_NUMBER = a.REWARDS_NUMBER_C OR b.PARENT_NUMBER = LPAD(a.REWARDS_NUMBER_C,10,'0') UNION SELECT a.REWARDS_NUMBER_C AS "
			+ "All_nodes, a.REWARDS_NUMBER_C AS PARENT_NUMBER FROM (SELECT ? REWARDS_NUMBER_C FROM dual ) a ) ) TBL WHERE "
			+ "(TBL.ALL_NODES = ST.MASTERNUMBER OR TBL.ALL_NODES = ST.TRANREWARDNUMBER OR LPAD(TBL.ALL_NODES,10,'0') = ST.MASTERNUMBER OR "
			+ "LPAD(TBL.ALL_NODES,10,'0') = ST.TRANREWARDNUMBER)) SELECT PARENT_NUMBER,ALL_NODES FROM CHILD_NUMS UNION "
			+ " SELECT PARENT_NUMBER,LPAD(ALL_NODES,10,'0') AS ALL_NODES FROM CHILD_NUMS";

	
	//LIST OF CAT for orders grid 
	public static final String QUERY_FOR_CATEGORIES = "SELECT DISTINCT s2.PRIMARY_PRODUCT_CAT_CD,case when PRIMARY_PRODUCT_CAT_DSCR is null "
			+ "then 'All Other Products' when PRIMARY_PRODUCT_CAT_DSCR = 'Toner' then 'Ink '|| chr(38) || ' Toner' "
			+ "else PRIMARY_PRODUCT_CAT_DSCR END AS PRIMARY_PRODUCT_CAT_DSCR ,CLASS_ID, S2.DIVISION FROM "
			+ "HELIOS_OWN.SDC_PRODUCT_HIERARCHY S2 ORDER BY PRIMARY_PRODUCT_CAT_DSCR";
	

	
	public static String QUERY_FOR_ORDER_ITEMS_LIST="SELECT SD.SALESTRANID,SD.PRODUCTCLASSNUMBER,SD.SALESTRANLINEITEMID,SD.PRODUCTSKU,"
			+ "SD.TRANQUANTITY,SD.LINETOTALAMOUNT,SD.EXTENDEDPRICE,SD.TRANLINESTATUSID,SD.PRODUCTNAME "
			+ " from CEX01_OWN.SALESTRANDETAIL SD " 
			+" WHERE SD.SALESTRANID in (?1)";
	  
	
	
	// List of all locations in shipment
	
	public static final String QUERY_FOR_SALES_SHIPMENT="WITH CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION SELECT LPAD(?,10,'0')"
			+ " AS CUST_NUM FROM DUAL UNION SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') UNION "
			+ " SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') )"
			+ " SELECT DISTINCT SHIP.SHIPTOID, "
			//+ "SHIP.SHIPTOADDRESS1"
			//+ " case when SHIP.SHIPTOADDRESS1 is null then 'EMPTY LOCATION' else SHIP.SHIPTOADDRESS1 END as SHIPTOADDRESS1 "
			+ " case when SHIP.SHIPTOADDRESS1 is null then 'STORE ORDERS' else SHIP.SHIPTOADDRESS1 END as SHIPTOADDRESS1 "
			+ ", SHIP.SHIPTOCITY, SHIP.SHIPTOSTATE, SHIP.SHIPTOZIP, TRAN.MasterNumber, TRAN.TRANREWARDNUMBER"
			+ " FROM CEX01_OWN.SALESTRAN TRAN LEFT OUTER JOIN CEX01_OWN.SHIPMENT SHIP ON TRAN.salestranid = SHIP.salestranid INNER JOIN CHILD_NUMS CN ON "
			+ "( TRAN.MASTERNUMBER = CN.CUST_NUM OR TRAN.TRANREWARDNUMBER =CN.CUST_NUM) ORDER BY 7";
			//+ " ship.shiptoaddress1";
	
	// location wise orders for shipment
	/*pavani old SQL
	 * public static final String QUERY_FOR_SHIPMENT_ORDERS_BY_LOCATION="WITH DT AS (SELECT TM_KY, CLD_DT, FSC_YR, FSC_PRD, FSC_WK, FSC_DY, TM_LVL FROM "
			+ "HELIOS_OWN.D_TIME WHERE TM_LVL = 'Day' ), CURR_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY,"
			+ " 'CURRENT' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR AND TO_NUMBER "
			+ "(DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD) ), LAST_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY,"
			+ " 'LAST' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR + 1 ), FISCAL_YEAR AS "
			+ "(SELECT * FROM CURR_FISCAL UNION SELECT * FROM LAST_FISCAL ), CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION "
			+ "SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL UNION SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD"
			+ " WHERE PARENT_NUMBER = LPAD( ?,10,'0') UNION SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE "
			+ "PARENT_NUMBER = LPAD( ?,10,'0') ) SELECT DISTINCT st.SOURCENUMBER, st.MASTERNUMBER, st.TRANREWARDNUMBER, st.SOURCESYSTEMID, st.TRANSTATUS, "
			+ "st.RECORDTYPE, st.INSERTDATE, ST.SHIPTOFIRSTNAME, ST.SHIPTOLASTNAME, st.SALESTRANID , st.TRANAMOUNT, st.ORDERTRANDATE , sd.MASTERSALESTRANID, "
			+ "SUM( CASE WHEN st.SOURCESYSTEMID =102 THEN 0 ELSE SD.EXTENDEDPRICE END) AS EXTENDEDPRICE FROM CEX01_OWN.SALESTRAN ST INNER "
			+ "JOIN FISCAL_YEAR CF ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) INNER JOIN CEX01_OWN.SALESTRANDETAIL sd ON "
			+ "(st.SALESTRANID =sd.SALESTRANID) LEFT OUTER JOIN CEX01_OWN.SHIPMENT SHIP ON (ST.SALESTRANID = SHIP.SALESTRANID ) INNER JOIN CHILD_NUMS CN "
			+ "ON ( ST.MASTERNUMBER = CN.CUST_NUM OR ST.TRANREWARDNUMBER =CN.CUST_NUM) WHERE ST.SOURCESYSTEMID IN (102,107) AND"
			+ " NVL(SHIP.SHIPTOADDRESS1,'EMPTY LOCATION') = ? GROUP BY st.SOURCENUMBER, st.MASTERNUMBER, st.TRANREWARDNUMBER, st.SOURCESYSTEMID, "
			+ "st.TRANSTATUS, st.RECORDTYPE, st.INSERTDATE, "
			+ "ST.SHIPTOFIRSTNAME, ST.SHIPTOLASTNAME, st.SALESTRANID , st.TRANAMOUNT, st.ORDERTRANDATE , sd.MASTERSALESTRANID";*/
	
	/*
	 
	 
	public static final String QUERY_FOR_SHIPMENT_ORDERS_BY_LOCATION="WITH DT AS (SELECT TM_KY, CLD_DT, FSC_YR, FSC_PRD, FSC_WK, FSC_DY, TM_LVL FROM HELIOS_OWN.D_TIME WHERE TM_LVL = 'Day' ), "
			+ "CURR_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY, "
			+ "'CURRENT' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) "
			+ "AND DT1.FSC_YR = DT2.FSC_YR AND TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD) ), "
			+ "LAST_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY, 'LAST' "
			+ "AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR + 1 ), "
			+ "FISCAL_YEAR AS (SELECT * FROM CURR_FISCAL UNION SELECT * FROM LAST_FISCAL ), CHILD_NUMS AS "
			+ "(SELECT ? AS CUST_NUM FROM DUAL UNION SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL UNION "
			+ "SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') UNION "
			+ "SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') ) "
			+ "SELECT DISTINCT st.SOURCENUMBER, st.MASTERNUMBER, st.TRANREWARDNUMBER, st.SOURCESYSTEMID, st.TRANSTATUS, st.RECORDTYPE, st.INSERTDATE, "
			+ "ST.SHIPTOFIRSTNAME, ST.SHIPTOLASTNAME, st.SALESTRANID , st.TRANAMOUNT, st.ORDERTRANDATE , sd.MASTERSALESTRANID, SUM( CASE WHEN st.SOURCESYSTEMID =102 "
			+ "THEN 0 ELSE SD.EXTENDEDPRICE END) AS EXTENDEDPRICE FROM CEX01_OWN.SALESTRAN ST INNER JOIN FISCAL_YEAR CF ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) "
			+ "INNER JOIN CEX01_OWN.SALESTRANDETAIL sd ON (st.SALESTRANID =sd.SALESTRANID) LEFT OUTER JOIN CEX01_OWN.SHIPMENT SHIP ON (ST.SALESTRANID = SHIP.SALESTRANID ) "
			+ "INNER JOIN CHILD_NUMS CN ON ( NVL(ST.MASTERNUMBER,'0') = CN.CUST_NUM OR NVL(ST.TRANREWARDNUMBER,'0') =CN.CUST_NUM) WHERE ST.SOURCESYSTEMID IN (102,107) "
			+ "AND NVL(SHIP.SHIPTOADDRESS1,'EMPTY LOCATION') = ? GROUP BY st.SOURCENUMBER, st.MASTERNUMBER, st.TRANREWARDNUMBER, "
			+ "st.SOURCESYSTEMID, st.TRANSTATUS, st.RECORDTYPE, st.INSERTDATE,"
			+ " ST.SHIPTOFIRSTNAME, ST.SHIPTOLASTNAME, st.SALESTRANID , st.TRANAMOUNT, st.ORDERTRANDATE , sd.MASTERSALESTRANID";
	*/
	// shipment cur , last for every order sum
	
	/*pavani old SQL
	 * public static final String QUERY_FOR_FISCAL_YEAR_ORDER_SUM="WITH DT AS (SELECT TM_KY, CLD_DT, FSC_YR, FSC_PRD, FSC_WK, FSC_DY, TM_LVL FROM "
			+ "HELIOS_OWN.D_TIME WHERE TM_LVL = 'Day' ), CURR_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY, "
			+ "'CURRENT' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR AND "
			+ "TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD) ), LAST_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, "
			+ "DT2.FSC_WK, DT2.FSC_DY, 'LAST' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR + 1 ),"
			+ " CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL UNION "
			+ "SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') UNION SELECT DISTINCT "
			+ "LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') ), FISCAL_YEAR AS (SELECT * FROM"
			+ " CURR_FISCAL UNION SELECT * FROM LAST_FISCAL ), CURR_TRANS AS (SELECT CF.FSC_YR,CF.FISCAL_TYPE,NVL(SHIP.SHIPTOADDRESS1,'EMPTY LOCATION') "
			+ "SHIPTOADDRESS1, ST.SALESTRANID,STD.MASTERSALESTRANID, ST.SOURCESYSTEMID,ST.RECORDTYPE, ST.TRANAMOUNT,STD.LINETOTALAMOUNT ORIGINAL_LINEAMOUNT,"
			+ "STD.EXTENDEDPRICE ORIGINAL_EXTENDEDPRICE,STD.TRANLINESTATUSID ORIGINAL_TRANLINESTATUSID, STR.MASTERSALESTRANID RETURN_MASTERSALESTRANID ,"
			+ " STR.LINETOTALAMOUNT RETURN_LINETOTALAMOUNT FROM CEX01_OWN.SALESTRAN ST INNER JOIN FISCAL_YEAR CF ON TRUNC (ST.ORDERTRANDATE) = "
			+ "TRUNC(CF.CLD_DT) LEFT OUTER JOIN CEX01_OWN.SALESTRANDETAIL STD ON STD.SALESTRANID = ST.SALESTRANID LEFT OUTER JOIN "
			+ "(SELECT SP.SALESTRANID,SP.SHIPTOADDRESS1, ROW_NUMBER() OVER (PARTITION BY SALESTRANID ORDER BY SOURCEUPDATEDATE DESC) LATEST "
			+ "FROM CEX01_OWN.SHIPMENT SP ) SHIP ON (ST.SALESTRANID = SHIP.SALESTRANID AND SHIP.LATEST=1) LEFT OUTER JOIN CEX01_OWN.SALESTRANDETAIL STR"
			+ " ON (STD.SALESTRANID = STR.MASTERSALESTRANID AND STD.PRODUCTSKU = STR.PRODUCTSKU) INNER JOIN CHILD_NUMS CN ON "
			+ "( ST.MASTERNUMBER = CN.CUST_NUM OR ST.TRANREWARDNUMBER =CN.CUST_NUM) WHERE ST.SOURCESYSTEMID IN (102 ,107))"
			+ " SELECT CT.SHIPTOADDRESS1,CT.FSC_YR,CT.FISCAL_TYPE, SUM(CASE WHEN SOURCESYSTEMID=102 THEN "
			+ "(NVL(ORIGINAL_LINEAMOUNT,0) - NVL(RETURN_LINETOTALAMOUNT,0)) WHEN SOURCESYSTEMID=107 THEN NVL(ORIGINAL_EXTENDEDPRICE,0) ELSE 0 END) "
			+ "TRANAMOUNTSUM FROM CURR_TRANS CT"
			+ " WHERE NVL(CT.RECORDTYPE,'X') != '0003' GROUP BY CT.FSC_YR,CT.FISCAL_TYPE,CT.SHIPTOADDRESS1";*/

	public static final String QUERY_FOR_SHIPMENT_ORDERS_BY_LOCATION = "WITH DT AS " + "  (SELECT TM_KY, "
			+ "    CLD_DT, " + "    FSC_YR, " + "    FSC_PRD, " + "    FSC_WK, " + "    FSC_DY, " + "    TM_LVL "
			+ "  FROM HELIOS_OWN.D_TIME " + "  WHERE TM_LVL = 'Day' " + "  ), " + "  CURR_FISCAL AS "
			+ "  (SELECT DISTINCT DT2.CLD_DT, " + "    DT2.FSC_YR, " + "    DT2.FSC_PRD, " + "    DT2.FSC_WK, "
			+ "    DT2.FSC_DY, " + "    'CURRENT' AS FISCAL_TYPE " + "  FROM DT DT1, " + "    DT DT2 "
			+ "  WHERE DT1.CLD_DT             = TRUNC (sysdate) " + "  AND DT1.FSC_YR               = DT2.FSC_YR "
			+ "  AND TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD) " + "  ), " + "  LAST_FISCAL AS "
			+ "  (SELECT DISTINCT DT2.CLD_DT, " + "    DT2.FSC_YR, " + "    DT2.FSC_PRD, " + "    DT2.FSC_WK, "
			+ "    DT2.FSC_DY, " + "    'LAST' AS FISCAL_TYPE " + "  FROM DT DT1, " + "    DT DT2 "
			+ "  WHERE DT1.CLD_DT = TRUNC (sysdate) " + "  AND DT1.FSC_YR   = DT2.FSC_YR + 1 " + "  ), "
			+ "  FISCAL_YEAR AS " + "  (SELECT * FROM CURR_FISCAL " + "  UNION " + "  SELECT * FROM LAST_FISCAL "
			+ "  ), " + "  CHILD_NUMS AS " + "  ( SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL " + "  UNION "
			+ "  SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM " + "  FROM helios_own.SA_PARENT_CHILD "
			+ "  WHERE PARENT_NUMBER = LPAD( ?,10,'0') " + "  ) " + "SELECT DISTINCT st.SOURCENUMBER, "
			+ "  st.MASTERNUMBER, " + "  st.TRANREWARDNUMBER, " + "  st.SOURCESYSTEMID, " + "  st.TRANSTATUS, "
			+ "  st.RECORDTYPE, " + "  st.INSERTDATE,NVL(ST.SHIPTOFIRSTNAME,SAM.FIRST_NAME) AS SHIPTOFIRSTNAME, NVL(ST.SHIPTOLASTNAME,SAM.LAST_NAME) AS SHIPTOLASTNAME, "
			+ "  st.SALESTRANID , " + "  st.TRANAMOUNT, " + "  st.ORDERTRANDATE , " + "  sd.MASTERSALESTRANID, "
			+ "  SUM( " + "  CASE " + "    WHEN st.SOURCESYSTEMID =102 " + "    THEN 0 " + "    ELSE SD.EXTENDEDPRICE "
			+ "  END) AS EXTENDEDPRICE " + "FROM CEX01_OWN.SALESTRAN ST " + "INNER JOIN FISCAL_YEAR CF "
			+ "ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) " + "AND ST.SOURCESYSTEMID      IN (102,107) "
			+ "INNER JOIN CEX01_OWN.SALESTRANDETAIL sd " + "ON (st.SALESTRANID =sd.SALESTRANID) "
			+ "LEFT OUTER JOIN CEX01_OWN.SHIPMENT SHIP " + "ON (ST.SALESTRANID = SHIP.SALESTRANID ) "
			+ "INNER JOIN CHILD_NUMS CN " + "ON ( ST.MASTERNUMBER                            = CN.CUST_NUM "
			+ "OR ST.TRANREWARDNUMBER                          =CN.CUST_NUM) "
			+ "Left outer join HELIOS_OWN.SAM_CUSTOMER_PROFILE sam on (st.TRANREWARDNUMBER = LPAD(sam.REWARDS_NUMBER,10,'0') or st.MASTERNUMBER = LPAD(sam.REWARDS_NUMBER,10,'0')) "
		//+ "WHERE NVL(SHIP.SHIPTOADDRESS1,'EMPTY LOCATION') = ? " + "GROUP BY st.SOURCENUMBER, "
		+ "WHERE NVL(SHIP.SHIPTOADDRESS1,'STORE ORDERS') = ? " + "GROUP BY st.SOURCENUMBER, "
			+ "  st.MASTERNUMBER, " + "  st.TRANREWARDNUMBER, " + "  st.SOURCESYSTEMID, " + "  st.TRANSTATUS, "
			+ "  st.RECORDTYPE, " + "  st.INSERTDATE, " + "  NVL(ST.SHIPTOFIRSTNAME,SAM.FIRST_NAME) , NVL(ST.SHIPTOLASTNAME,SAM.LAST_NAME), "
			+ "  st.SALESTRANID , " + "  st.TRANAMOUNT, " + "  st.ORDERTRANDATE , " + "  sd.MASTERSALESTRANID";
	
	
	public static final String QUERY_FOR_SHIPMENT_ORDERS_BY_LOCATION1 = "WITH DT AS  (SELECT TM_KY,  CLD_DT, FSC_YR,  FSC_PRD,  FSC_WK,  FSC_DY, TM_LVL  FROM HELIOS_OWN.D_TIME  WHERE TM_LVL = 'Day'  ),"
					 +" CURR_FISCAL AS  (SELECT DISTINCT DT2.CLD_DT,  DT2.FSC_YR,  DT2.FSC_PRD,  DT2.FSC_WK,  DT2.FSC_DY, 'CURRENT' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT             = TRUNC (sysdate)"
					 +" AND DT1.FSC_YR               = DT2.FSC_YR  AND TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD) ), LAST_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD,"
					 +"   DT2.FSC_WK,   DT2.FSC_DY, 'LAST' AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR   = DT2.FSC_YR + 1 ),"
					 +" FISCAL_YEAR AS (SELECT * FROM CURR_FISCAL UNION SELECT * FROM LAST_FISCAL ), CHILD_NUMS AS  ( SELECT ? AS CUST_NUM FROM DUAL  UNION  SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER =?  ), REWARDS_NUMBER AS"
					 +" (SELECT LPAD(sam.REWARDS_NUMBER,10,'0')  FROM HELIOS_OWN.SAM_CUSTOMER_PROFILE sam  ) SELECT DISTINCT st.SOURCENUMBER, st.MASTERNUMBER,  st.TRANREWARDNUMBER, st.SOURCESYSTEMID,  st.TRANSTATUS,  st.RECORDTYPE, st.INSERTDATE,"
					 +" NVL(ST.SHIPTOFIRSTNAME,SAM.FIRST_NAME) AS SHIPTOFIRSTNAME,  NVL(ST.SHIPTOLASTNAME,SAM.LAST_NAME)   AS SHIPTOLASTNAME, st.SALESTRANID , st.TRANAMOUNT,  st.ORDERTRANDATE ,"
					 +" sd.MASTERSALESTRANID, SUM( CASE  WHEN st.SOURCESYSTEMID =102  THEN 0  ELSE SD.EXTENDEDPRICE  END) AS EXTENDEDPRICE FROM CEX01_OWN.SALESTRAN ST INNER JOIN FISCAL_YEAR CF ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT)	AND ST.SOURCESYSTEMID      IN (102,107)"
					+" INNER JOIN CEX01_OWN.SALESTRANDETAIL sd	ON (st.SALESTRANID =sd.SALESTRANID) LEFT OUTER JOIN CEX01_OWN.SHIPMENT SHIP ON (ST.SALESTRANID = SHIP.SALESTRANID )	INNER JOIN CHILD_NUMS CN"
					+" ON ( ST.MASTERNUMBER   = CN.CUST_NUM OR ST.TRANREWARDNUMBER =CN.CUST_NUM) LEFT OUTER JOIN HELIOS_OWN.SAM_CUSTOMER_PROFILE sam ON (st.TRANREWARDNUMBER = REWARDS_NUMBER"
					+" OR st.MASTERNUMBER      = REWARDS_NUMBER)"					
					+" WHERE NVL(SHIP.SHIPTOADDRESS1,'STORE ORDERS') = ?"
					+" GROUP BY st.SOURCENUMBER,  st.MASTERNUMBER, st.TRANREWARDNUMBER, st.SOURCESYSTEMID, st.TRANSTATUS, st.RECORDTYPE, st.INSERTDATE,  NVL(ST.SHIPTOFIRSTNAME,SAM.FIRST_NAME) ,"
					+"  NVL(ST.SHIPTOLASTNAME,SAM.LAST_NAME), st.SALESTRANID ,  st.TRANAMOUNT, st.ORDERTRANDATE ,  sd.MASTERSALESTRANID ";
					
					public static final String QUERY_FOR_FISCAL_YEAR_ORDER_SUM = "WITH DT AS " + "  (SELECT TM_KY, " + "    CLD_DT, "
			+ "    FSC_YR, " + "    FSC_PRD, " + "    FSC_WK, " + "    FSC_DY, " + "    TM_LVL "
			+ "  FROM HELIOS_OWN.D_TIME " + "  WHERE TM_LVL = 'Day' " + "  ), " + "  CURR_FISCAL AS "
			+ "  (SELECT DISTINCT DT2.CLD_DT, " + "    DT2.FSC_YR, " + "    DT2.FSC_PRD, " + "    DT2.FSC_WK, "
			+ "    DT2.FSC_DY, " + "    'CURRENT' AS FISCAL_TYPE " + "  FROM DT DT1, " + "    DT DT2 "
			+ "  WHERE DT1.CLD_DT             = TRUNC (sysdate) " + "  AND DT1.FSC_YR               = DT2.FSC_YR "
			+ "  AND TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD) " + "  ), " + "  LAST_FISCAL AS "
			+ "  (SELECT DISTINCT DT2.CLD_DT, " + "    DT2.FSC_YR, " + "    DT2.FSC_PRD, " + "    DT2.FSC_WK, "
			+ "    DT2.FSC_DY, " + "    'LAST' AS FISCAL_TYPE " + "  FROM DT DT1, " + "    DT DT2 "
			+ "  WHERE DT1.CLD_DT = TRUNC (sysdate) " + "  AND DT1.FSC_YR   = DT2.FSC_YR + 1 " + "  ), "
			+ "  CHILD_NUMS AS " + "  ( SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL " + "  UNION "
			+ "  SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM " + "  FROM helios_own.SA_PARENT_CHILD "
			+ "  WHERE PARENT_NUMBER = LPAD( ?,10,'0') " + "  ) , " + "  FISCAL_YEAR AS "
			+ "  (SELECT * FROM CURR_FISCAL " + "  UNION " + "  SELECT * FROM LAST_FISCAL " + "  ), "
			+ "  CURR_TRANS AS " + "  (SELECT CF.FSC_YR, " + "    CF.FISCAL_TYPE, "
		//	+ "    NVL(SHIP.SHIPTOADDRESS1,'EMPTY LOCATION') SHIPTOADDRESS1, " + "    ST.SALESTRANID, "
		+ "    NVL(SHIP.SHIPTOADDRESS1,'STORE ORDERS') SHIPTOADDRESS1, " + "    ST.SALESTRANID, "
			+ "    STD.MASTERSALESTRANID, " + "    ST.SOURCESYSTEMID, " + "    ST.RECORDTYPE, " + "    ST.TRANAMOUNT, "
			+ "    STD.LINETOTALAMOUNT ORIGINAL_LINEAMOUNT, " + "    STD.EXTENDEDPRICE ORIGINAL_EXTENDEDPRICE, "
			+ "    STD.TRANLINESTATUSID ORIGINAL_TRANLINESTATUSID, "
			+ "    STR.MASTERSALESTRANID RETURN_MASTERSALESTRANID , "
			+ "    STR.LINETOTALAMOUNT RETURN_LINETOTALAMOUNT " + "  FROM CEX01_OWN.SALESTRAN ST "
			+ "  INNER JOIN FISCAL_YEAR CF " + "  ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) "
			+ "  AND ST.SOURCESYSTEMID      IN (102 ,107) " + "  LEFT OUTER JOIN CEX01_OWN.SALESTRANDETAIL STD "
			+ "  ON STD.SALESTRANID = ST.SALESTRANID " + "  LEFT OUTER JOIN " + "    (SELECT SP.SALESTRANID, "
			+ "      SP.SHIPTOADDRESS1, "
			+ "      ROW_NUMBER() OVER (PARTITION BY SALESTRANID ORDER BY SOURCEUPDATEDATE DESC) LATEST "
			+ "    FROM CEX01_OWN.SHIPMENT SP " + "    ) SHIP " + "  ON (ST.SALESTRANID = SHIP.SALESTRANID "
			+ "  AND SHIP.LATEST    =1) " + "  LEFT OUTER JOIN CEX01_OWN.SALESTRANDETAIL STR "
			+ "  ON (STD.SALESTRANID = STR.MASTERSALESTRANID " + "  AND STD.PRODUCTSKU  = STR.PRODUCTSKU) "
			+ "  INNER JOIN CHILD_NUMS CN " + "  ON ( ST.MASTERNUMBER   = CN.CUST_NUM "
			+ "  OR ST.TRANREWARDNUMBER =CN.CUST_NUM) " + "  ) " + "SELECT CT.SHIPTOADDRESS1, " + "  CT.FSC_YR, "
			+ "  CT.FISCAL_TYPE, " + "  SUM( " + "  CASE " + "    WHEN SOURCESYSTEMID=102 "
			+ "    THEN (NVL(ORIGINAL_LINEAMOUNT,0) - NVL(RETURN_LINETOTALAMOUNT,0)) " + "    WHEN SOURCESYSTEMID=107 "
			+ "    THEN NVL(ORIGINAL_EXTENDEDPRICE,0) " + "    ELSE 0 " + "  END) TRANAMOUNTSUM "
			+ "FROM CURR_TRANS CT " + "WHERE NVL(CT.RECORDTYPE,'X') != '0003' " + "GROUP BY CT.FSC_YR, "
			+ "  CT.FISCAL_TYPE, " + "  CT.SHIPTOADDRESS1";

	// Rep
	public static final String QUERY_FOR_REP_CUST_INFO="SELECT cp.SAM_SFDC_ID,CPM.customer_number,cp.rewards_number, CP.Company_name,CPM.contract_type,cpm.EMP_NUMBER,"
			+ " cpm.name repname, cpm.email repmail,cp.emailaddress,cpm.phone repPhone,CPM.rep_role_cd,hc.account_rank,hc.last_contacted_date,"
			+ " CPM.DESIGNATION,CPM.ACCOUNT_GROUP,CP.first_name,cp.last_name,CP.CONTACT_EMAIL_ID,CP.REWARDS_TIER,CP.ACCOUNT_PHONE,"
			+ " CP.BUSINESS_UNIT,CP.BILLINGSTREET,CP.BILLINGCITY,CP.BILLINGSTATE,CP.POSTALCODE , to_char(CP.ENROLLED_DT, 'MM/DD/YYYY') as ENROLLED_DT,"
			+ " SCR.SIC_CODE_4_DESC AS INDUSTRY_CODE, DECODE (CALL_REASON_CATEGORY, 1, 'Abandoned Cart', 2, 'Off Cadence', 3, 'High Likelihood of Churn', 4, 'Low Call Coverage', 5, 'Declining', 6, 'High Propensity to Purchase', '')"
			+ "   AS CALL_REASON, HC.CATEGORY, CP.ACCOUNT_ID FROM HELIOS_OWN.SAM_CUSTOMER_PROFILE CP "
			+ " INNER JOIN HELIOS_OWN.MV_SA_CUSTOMER_PROFILE CPM ON (CPM.CUSTOMER_NUMBER = CP.REWARDS_NUMBER)"
			+ " LEFT OUTER JOIN HELIOS_OWN.HE_ACCNT_MGR_CUSTOMER HC ON HC.CUSTOMER_NUMBER = CPM.CUSTOMER_NUMBER"
			+ " LEFT OUTER JOIN HELIOS_OWN.SIC_CODE_REFERENCE SCR ON SCR.SIC_CODE_4 = CP.SIC_CODE"
			+ " WHERE CPM.EMP_NUMBER = ?  ORDER BY HC.ACCOUNT_RANK NULLS LAST";
	
	public static final String SAM_TOTAL_COUNT="SELECT cp.SAM_SFDC_ID,CPM.customer_number,cp.rewards_number, CP.Company_name,CPM.contract_type,cpm.EMP_NUMBER,"
			+ " cpm.name repname, cpm.email repmail,cp.emailaddress,cpm.phone repPhone,CPM.rep_role_cd,hc.account_rank,hc.last_contacted_date,"
			+ " CPM.DESIGNATION,CPM.ACCOUNT_GROUP,CP.first_name,cp.last_name,CP.CONTACT_EMAIL_ID,CP.REWARDS_TIER,CP.ACCOUNT_PHONE,"
			+ " CP.BUSINESS_UNIT,CP.BILLINGSTREET,CP.BILLINGCITY,CP.BILLINGSTATE,CP.POSTALCODE , to_char(CP.ENROLLED_DT, 'MM/DD/YYYY') as ENROLLED_DT,"
			+ " SCR.SIC_CODE_4_DESC AS INDUSTRY_CODE, DECODE (CALL_REASON_CATEGORY, 1, 'Abandoned Cart', 2, 'Off Cadence', 3, 'High Likelihood of Churn', 4, 'Low Call Coverage', 5, 'Declining', 6, 'High Propensity to Purchase', '')"
			+ "   AS CALL_REASON, HC.CATEGORY, CP.ACCOUNT_ID FROM HELIOS_OWN.SAM_CUSTOMER_PROFILE CP "
			+ " INNER JOIN HELIOS_OWN.MV_SA_CUSTOMER_PROFILE CPM ON (CPM.CUSTOMER_NUMBER = CP.REWARDS_NUMBER)"
			+ " LEFT OUTER JOIN HELIOS_OWN.HE_ACCNT_MGR_CUSTOMER HC ON HC.CUSTOMER_NUMBER = CPM.CUSTOMER_NUMBER"
			+ " LEFT OUTER JOIN HELIOS_OWN.SIC_CODE_REFERENCE SCR ON SCR.SIC_CODE_4 = CP.SIC_CODE"
			+ " WHERE CPM.EMP_NUMBER = :accId  ORDER BY HC.ACCOUNT_RANK NULLS LAST";
	
/*	public static final String QUERY_FOR_REP_CUST_INFO_SERVERSIDE = "SELECT SAM_SFDC_ID,customer_number,rewards_number, Company_name,contract_type,EMP_NUMBER,"
			+ " repname, repmail,emailaddress,repPhone,rep_role_cd,account_rank,last_contacted_date,"
			+ " DESIGNATION,ACCOUNT_GROUP,first_name,last_name,CONTACT_EMAIL_ID,REWARDS_TIER,ACCOUNT_PHONE,"
			+ " BUSINESS_UNIT,BILLINGSTREET,BILLINGCITY,BILLINGSTATE,POSTALCODE ,  ENROLLED_DT, INDUSTRY_CODE,  CALL_REASON, CATEGORY, ACCOUNT_ID from (SELECT cp.SAM_SFDC_ID as SAM_SFDC_ID,CPM.customer_number as customer_number,cp.rewards_number as rewards_number, CP.Company_name as Company_name,CPM.contract_type as contract_type,cpm.EMP_NUMBER as EMP_NUMBER,"
			+ " cpm.name as repname, cpm.email as repmail,cp.emailaddress as emailaddress,cpm.phone as repPhone,CPM.rep_role_cd as rep_role_cd,hc.account_rank as account_rank,hc.last_contacted_date as last_contacted_date,"
			+ " CPM.DESIGNATION as DESIGNATION,CPM.ACCOUNT_GROUP as ACCOUNT_GROUP,CP.first_name as first_name,cp.last_name as last_name,CP.CONTACT_EMAIL_ID as CONTACT_EMAIL_ID ,CP.REWARDS_TIER as REWARDS_TIER,CP.ACCOUNT_PHONE as ACCOUNT_PHONE,"
			+ " CP.BUSINESS_UNIT as BUSINESS_UNIT,CP.BILLINGSTREET as BILLINGSTREET,CP.BILLINGCITY as BILLINGCITY,CP.BILLINGSTATE as BILLINGSTATE,CP.POSTALCODE as POSTALCODE, to_char(CP.ENROLLED_DT, 'MM/DD/YYYY') as ENROLLED_DT,"
			+ " SCR.SIC_CODE_4_DESC AS INDUSTRY_CODE, DECODE (CALL_REASON_CATEGORY, 1, 'Abandoned Cart', 2, 'Off Cadence', 3, 'High Likelihood of Churn', 4, 'Low Call Coverage', 5, 'Declining', 6, 'High Propensity to Purchase', '')"
			+ " AS CALL_REASON, HC.CATEGORY as CATEGORY, CP.ACCOUNT_ID as ACCOUNT_ID , rownum rownumber FROM HELIOS_OWN.SAM_CUSTOMER_PROFILE CP"
			+ " INNER JOIN HELIOS_OWN.MV_SA_CUSTOMER_PROFILE CPM ON (CPM.CUSTOMER_NUMBER = CP.REWARDS_NUMBER)"
			+ " LEFT OUTER JOIN HELIOS_OWN.HE_ACCNT_MGR_CUSTOMER HC ON HC.CUSTOMER_NUMBER = CPM.CUSTOMER_NUMBER"
			+ " LEFT OUTER JOIN HELIOS_OWN.SIC_CODE_REFERENCE SCR ON SCR.SIC_CODE_4 = CP.SIC_CODE"
			+ " WHERE CPM.EMP_NUMBER =:accId ORDER BY HC.ACCOUNT_RANK NULLS LAST";*/
	
	
	
	
	public static final String QUERY_FOR_REP_CUST_INFO_SERVERSIDE = "SELECT SAM_SFDC_ID, customer_number,rewards_number,Company_name, contract_type, EMP_NUMBER, repname, repmail, emailaddress, repPhone, rep_role_cd, account_rank, last_contacted_date, DESIGNATION, ACCOUNT_GROUP, first_name, last_name, CONTACT_EMAIL_ID, REWARDS_TIER,"
	  +" ACCOUNT_PHONE, BUSINESS_UNIT, BILLINGSTREET, BILLINGCITY, BILLINGSTATE, POSTALCODE , ENROLLED_DT, INDUSTRY_CODE, CALL_REASON, CATEGORY,ACCOUNT_ID , TM_ZN "
	  +" FROM (SELECT SAM_SFDC_ID,customer_number, rewards_number, Company_name, contract_type, EMP_NUMBER, repname, repmail, emailaddress, repPhone, rep_role_cd,  NVL(account_rank,0) as account_rank,"
	  +" last_contacted_date, DESIGNATION, ACCOUNT_GROUP, first_name, last_name, CONTACT_EMAIL_ID, REWARDS_TIER, ACCOUNT_PHONE, BUSINESS_UNIT, BILLINGSTREET, BILLINGCITY, BILLINGSTATE, POSTALCODE , ENROLLED_DT, INDUSTRY_CODE, CALL_REASON, CATEGORY,  ACCOUNT_ID, TM_ZN , rownum rowno" 
	  +" FROM (SELECT cp.SAM_SFDC_ID AS SAM_SFDC_ID,  CPM.customer_number  AS customer_number,  cp.rewards_number  AS rewards_number,  CP.Company_name  AS Company_name,"
	  +" CPM.contract_type AS contract_type, cpm.EMP_NUMBER AS EMP_NUMBER, cpm.name AS repname, cpm.email AS repmail, cp.emailaddress   AS emailaddress,"
	    +" cpm.phone  AS repPhone, CPM.rep_role_cd AS rep_role_cd, hc.account_rank AS account_rank, hc.last_contacted_date  AS last_contacted_date,  CPM.DESIGNATION  AS DESIGNATION, CPM.ACCOUNT_GROUP AS ACCOUNT_GROUP,"
	    +" CP.first_name AS first_name, cp.last_name AS last_name, CP.CONTACT_EMAIL_ID AS CONTACT_EMAIL_ID ,"
	    +" CP.REWARDS_TIER AS REWARDS_TIER, CP.ACCOUNT_PHONE AS ACCOUNT_PHONE, CP.BUSINESS_UNIT  AS BUSINESS_UNIT, CP.BILLINGSTREET AS BILLINGSTREET, CP.BILLINGCITY    AS BILLINGCITY, CP.BILLINGSTATE  AS BILLINGSTATE,"
	    +" CP.POSTALCODE     AS POSTALCODE,TO_CHAR(CP.ENROLLED_DT, 'MM/DD/YYYY')  AS ENROLLED_DT, SCR.SIC_CODE_4_DESC AS INDUSTRY_CODE, DECODE (CALL_REASON_CATEGORY, 1, 'Abandoned Cart', 2, 'Off Cadence', 3, 'High Likelihood of Churn', 4, 'Low Call Coverage', 5, 'Declining', 6, 'High Propensity to Purchase', '') AS CALL_REASON,"
	    +" HC.CATEGORY  AS CATEGORY, CP.ACCOUNT_ID   AS ACCOUNT_ID , DECODE ( CP.CUST_TIME_ZONE, 'Eastern Time (US ' || CHR (38) || ' Canada)', 'EST','Pacific Time (US ' || CHR (38) || ' Canada)', 'PST', 'Central Time (US ' || CHR (38) || ' Canada)', 'CST', 'Mountain Time (US ' || CHR (38) || ' Canada)', 'MST', 'Mountain Standard Time', 'MST', 'Eastern Standard Time', 'EST', 'Pacific Standard Time', 'PST','Central Standard Time', 'CST','Atlantic Standard Time','AST', '') AS TM_ZN , "
       +" rownum rownumber"
	  +" FROM HELIOS_OWN.SAM_CUSTOMER_PROFILE CP  INNER JOIN HELIOS_OWN.MV_SA_CUSTOMER_PROFILE CPM  ON (CPM.CUSTOMER_NUMBER = CP.REWARDS_NUMBER)"
	  +" LEFT OUTER JOIN HELIOS_OWN.HE_ACCNT_MGR_CUSTOMER HC  ON HC.CUSTOMER_NUMBER = CPM.CUSTOMER_NUMBER  LEFT OUTER JOIN HELIOS_OWN.SIC_CODE_REFERENCE SCR"
	  +" ON SCR.SIC_CODE_4    = CP.SIC_CODE  WHERE CPM.EMP_NUMBER =:accId ";
	   //ORDER BY HC.ACCOUNT_RANK NULLS LAST )
	 		//where rounumber >0 and rounumber <=20 ;
	
	public static final String QUERY_FOR_REP_SINGLE_CUST_INFO="SELECT cp.SAM_SFDC_ID,CPM.customer_number,cp.rewards_number, CP.Company_name,CPM.contract_type,cpm.EMP_NUMBER,"
			+ " cpm.name repname, cpm.email repmail,cp.emailaddress,cpm.phone repPhone,CPM.rep_role_cd,hc.account_rank,hc.last_contacted_date,"
			+ " CPM.DESIGNATION,CPM.ACCOUNT_GROUP,CP.first_name,cp.last_name,CP.CONTACT_EMAIL_ID,CP.REWARDS_TIER,CP.ACCOUNT_PHONE,"
			+ " CP.BUSINESS_UNIT,CP.BILLINGSTREET,CP.BILLINGCITY,CP.BILLINGSTATE,CP.POSTALCODE , to_char(CP.ENROLLED_DT, 'MM/DD/YYYY') as ENROLLED_DT ,"
			+ " SCR.SIC_CODE_4_DESC AS INDUSTRY_CODE, DECODE (CALL_REASON_CATEGORY, 1, 'Abandoned Cart', 2, 'Off Cadence', 3, 'High Likelihood of Churn', 4, 'Low Call Coverage', 5, 'Declining', 6, 'High Propensity to Purchase', '')"
			+ "   AS CALL_REASON, HC.CATEGORY , CP.ACCOUNT_ID , DECODE ( CP.CUST_TIME_ZONE, 'Atlantic Time (US ' || CHR (38) || ' Canada)', 'Atlantic Standard Time', 'Eastern Time (US ' || CHR (38) || ' Canada)', 'Eastern Standard Time', 'Pacific Time (US ' || CHR (38) || ' Canada)', 'Pacific Standard Time', 'Central Time (US ' || CHR (38) || ' Canada)', 'Central Standard Time', 'Mountain Time (US ' || CHR (38) || ' Canada)', 'Mountain Standard Time', 'Mountain Standard Time', 'Mountain Standard Time', 'Eastern Standard Time', 'Eastern Standard Time', 'Pacific Standard Time', 'Pacific Standard Time', 'Central Standard Time', 'Central Standard Time','Atlantic Standard Time', 'Atlantic Standard Time', '') AS TM_ZN FROM HELIOS_OWN.SAM_CUSTOMER_PROFILE CP "
			+ " INNER JOIN HELIOS_OWN.MV_SA_CUSTOMER_PROFILE CPM ON (CPM.CUSTOMER_NUMBER = NVL (CP.REWARDS_NUMBER, '0'))"
			+ " LEFT OUTER JOIN HELIOS_OWN.HE_ACCNT_MGR_CUSTOMER HC ON HC.CUSTOMER_NUMBER = CPM.CUSTOMER_NUMBER"
			+ " LEFT OUTER JOIN HELIOS_OWN.SIC_CODE_REFERENCE SCR ON SCR.SIC_CODE_4 = CP.SIC_CODE"
			+ " WHERE CPM.EMP_NUMBER = ? and CPM.CUSTOMER_NUMBER=? ORDER BY HC.ACCOUNT_RANK NULLS LAST";
	
	
		
// drop down	
	public static final String QUERY_FOR_LATEST_FISCAL_YEARS1="WITH DT AS (SELECT TM_KY, CLD_DT, FSC_YR, FSC_PRD, FSC_WK, FSC_DY, TM_LVL "
			+ "FROM HELIOS_OWN.D_TIME WHERE TM_LVL = 'Day'), CURR_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY "
			+ "FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR AND TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER (DT1.FSC_PRD)), "
			+ "CURR_YR AS (SELECT DISTINCT FSC_YR FROM CURR_FISCAL), MAX_DATE AS (SELECT max(ST.ORDERTRANDATE) AS MAXTRANDATE FROM CEX01_OWN.SALESTRAN ST "
			+ "WHERE nvl(ST.MASTERNUMBER,'0') = ? OR nvl(ST.TRANREWARDNUMBER,'0') = ?), CURR_TRANS_YR AS "
			+ "(SELECT DISTINCT DT.FSC_YR FROM DT DT INNER JOIN MAX_DATE MD ON (TRUNC(DT.CLD_DT) = TRUNC(MD.MAXTRANDATE))), "
			+ "ACTUAL_YEAR AS (SELECT NVL((SELECT * FROM CURR_TRANS_YR),(SELECT * FROM CURR_YR)) AS CURR_YEAR FROM DUAL) "
			+ "SELECT TO_NUMBER(CURR_YEAR) AS CUST_YEARS FROM ACTUAL_YEAR UNION"
			+ " SELECT TO_NUMBER(CURR_YEAR)-1 CUST_YEARS FROM ACTUAL_YEAR ORDER BY 1 DESC";
	
	public static final String QUERY_FOR_LATEST_FISCAL_YEARS="WITH DT AS (SELECT TM_KY, CLD_DT, FSC_YR, FSC_PRD, FSC_WK, FSC_DY, TM_LVL FROM HELIOS_OWN.D_TIME WHERE TM_LVL = 'Day'), "
			+ "PARENT_CHILD AS (SELECT LPAD (ALL_NODES, 10, '0') AS ALL_NODES, LPAD (PARENT_NUMBER, 10, '0') AS PARENT_NUMBER FROM "
			+ "(SELECT B.CHILD_NUMBER AS ALL_NODES, B.PARENT_NUMBER FROM HELIOS_OWN.SA_PARENT_CHILD B WHERE B.PARENT_NUMBER = LPAD (?, 10, '0') "
			+ "UNION SELECT LPAD (?, 10, '0') AS ALL_NODES, LPAD (?, 10, '0') AS PARENT_NUMBER FROM DUAL A)), "
			+ "MAX_ORDER_DATE AS (SELECT MAX (ST.ORDERTRANDATE) AS MAXTRANDATE FROM CEX01_OWN.SALESTRAN ST, PARENT_CHILD PC WHERE ST.MASTERNUMBER IN "
			+ "(PC.ALL_NODES) OR ST.TRANREWARDNUMBER IN (PC.ALL_NODES)) SELECT TO_NUMBER (DT.FSC_YR) AS CUST_YEARS FROM MAX_ORDER_DATE CO INNER JOIN DT ON TRUNC "
			+ "(CO.MAXTRANDATE) = DT.CLD_DT UNION SELECT TO_NUMBER (DT.FSC_YR) - 1 AS "
			+ "CUST_YEARS FROM MAX_ORDER_DATE CO INNER JOIN DT ON TRUNC (CO.MAXTRANDATE) = DT.CLD_DT ORDER BY 1 DESC";
	
	
	
	public static final String QUERY_FOR_CUST_CHILD_INFO = " SELECT SPC.PARENT_NUMBER AS PARENT_REWARDS, SPC.CHILD_NUMBER AS CHILD_REWARDS"
			+ " FROM HELIOS_OWN.SA_PARENT_CHILD SPC WHERE LPAD(SPC.PARENT_NUMBER, 10, '0') =  LPAD( ?,10,'0')";
	
	
	public static final String SHIPMENT_ORDER_COUNT="WITH DT AS (SELECT TM_KY, CLD_DT, FSC_YR, FSC_PRD, FSC_WK, FSC_DY, TM_LVL FROM HELIOS_OWN.D_TIME "
			+ " WHERE TM_LVL = 'Day' ), CURR_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY, 'CURRENT' "
			+ "AS FISCAL_TYPE FROM DT DT1, DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR AND TO_NUMBER (DT2.FSC_PRD) <= TO_NUMBER "
			+ "(DT1.FSC_PRD) ), LAST_FISCAL AS (SELECT DISTINCT DT2.CLD_DT, DT2.FSC_YR, DT2.FSC_PRD, DT2.FSC_WK, DT2.FSC_DY, 'LAST' AS FISCAL_TYPE FROM DT DT1,"
			+ " DT DT2 WHERE DT1.CLD_DT = TRUNC (sysdate) AND DT1.FSC_YR = DT2.FSC_YR + 1 ), FISCAL_YEAR AS (SELECT * FROM CURR_FISCAL UNION SELECT * "
			+ "FROM LAST_FISCAL ), CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL"
			+ " UNION SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') UNION SELECT DISTINCT "
			+ "LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') ) SELECT NVL(SHIP.SHIPTOADDRESS1,"
		//	+ "'EMPTY LOCATION') SHIPTOADDRESS1, COUNT(DISTINCT CASE WHEN CF.FISCAL_TYPE = 'CURRENT' THEN ST.SOURCENUMBER ELSE NULL END) AS CFYCOUNT, "
		+ "'STORE ORDERS') SHIPTOADDRESS1, COUNT(DISTINCT CASE WHEN CF.FISCAL_TYPE = 'CURRENT' THEN ST.SOURCENUMBER ELSE NULL END) AS CFYCOUNT, "
		+ "COUNT(DISTINCT CASE WHEN CF.FISCAL_TYPE = 'LAST' THEN ST.SOURCENUMBER ELSE NULL END) AS LFYCOUNT FROM CEX01_OWN.SALESTRAN ST INNER JOIN "
			+ "FISCAL_YEAR CF ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) INNER JOIN CEX01_OWN.SALESTRANDETAIL sd "
			+ "ON (st.SALESTRANID =sd.SALESTRANID) LEFT OUTER JOIN CEX01_OWN.SHIPMENT SHIP ON (ST.SALESTRANID = SHIP.SALESTRANID ) "
			+ "INNER JOIN CHILD_NUMS CN ON ( ST.MASTERNUMBER = CN.CUST_NUM OR ST.TRANREWARDNUMBER =CN.CUST_NUM) WHERE ST.SOURCESYSTEMID IN "
			//+ "(102,107) AND NVL(ST.RECORDTYPE,'X') != '0003' GROUP BY NVL(SHIP.SHIPTOADDRESS1,'EMPTY LOCATION') ORDER BY 1,2";
			+ "(102,107) AND NVL(ST.RECORDTYPE,'X') != '0003' GROUP BY NVL(SHIP.SHIPTOADDRESS1,'STORE ORDERS') ORDER BY 1,2";
	
	/*pavani old SQL
	 * public static final String QUERY_FOR_FISCAL_MONTH_CATEGORIES_SUM="WITH DT AS (SELECT CLD_DT, FSC_YR, 'FP ' || FSC_PRD AS FSC_PRD FROM HELIOS_OWN.D_TIME"
			+ " WHERE FSC_YR =? AND UPPER(TM_LVL)='DAY' ), DIST_PRD AS (SELECT DISTINCT FSC_PRD FROM DT ) , DIST_CATG AS ( SELECT DISTINCT CASE"
			+ " WHEN PRIMARY_PRODUCT_CAT_DSCR IS NULL THEN 'All Other Products' WHEN PRIMARY_PRODUCT_CAT_DSCR = 'Toner' THEN 'Ink ' || chr(38) || ' Toner' "
			+ "ELSE PRIMARY_PRODUCT_CAT_DSCR END AS PRIMARY_PRODUCT_CAT_DSCR FROM HELIOS_OWN.SDC_PRODUCT_HIERARCHY ), DIST_PRD_CAT_MATRIX AS (SELECT DP.FSC_PRD,"
			+ " DC.primary_product_cat_dscr, SI.SOURCESYSTEMID FROM DIST_PRD DP INNER JOIN DIST_CATG DC ON (1=1) INNER JOIN (SELECT '102' AS SOURCESYSTEMID "
			+ "FROM DUAL UNION SELECT '107' AS SOURCESYSTEMID FROM DUAL ) SI ON (1=1) ), CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION "
			+ "SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL UNION SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE "
			+ "PARENT_NUMBER = LPAD( ?,10,'0') UNION SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE "
			+ "PARENT_NUMBER = LPAD( ?,10,'0') ), CURR_TRANS AS (SELECT CF.FSC_YR, CF.FSC_PRD, CASE WHEN PH.PRIMARY_PRODUCT_CAT_DSCR IS NULL OR "
			+ "STD.productclassnumber IS NULL THEN 'All Other Products' WHEN PH.PRIMARY_PRODUCT_CAT_DSCR = 'Toner' THEN 'Ink ' || chr(38) || ' Toner' "
			+ "ELSE PH.PRIMARY_PRODUCT_CAT_DSCR END AS PRIMARY_PRODUCT_CAT_DSCR, ST.SOURCESYSTEMID, CASE WHEN (ST.SOURCESYSTEMID = 102 AND "
			+ "ST.RECORDTYPE = '0003') THEN STD.LINETOTALAMOUNT * -1 WHEN (ST.SOURCESYSTEMID = 102 AND ST.RECORDTYPE != '0003') THEN STD.LINETOTALAMOUNT"
			+ " WHEN (ST.SOURCESYSTEMID = 107 AND STD.TRANLINESTATUSID IN ('RETURN','SALE')) THEN STD.EXTENDEDPRICE ELSE 0 END AS LINETOTALAMOUNT "
			+ "FROM CEX01_OWN.SALESTRAN ST INNER JOIN DT CF ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) INNER JOIN CEX01_OWN.SALESTRANDETAIL STD "
			+ "ON STD.SALESTRANID = ST.SALESTRANID LEFT OUTER JOIN HELIOS_OWN.SDC_PRODUCT_HIERARCHY PH ON NVL (STD.PRODUCTCLASSNUMBER, 0) ="
			+ " NVL (PH.CLASS_ID, 1) INNER JOIN CHILD_NUMS CN ON ( NVL(ST.MASTERNUMBER,'0') = CN.CUST_NUM OR NVL(ST.TRANREWARDNUMBER,'0') =CN.CUST_NUM) )"
			+ " SELECT DPM.FSC_PRD, DPM.primary_product_cat_dscr, DPM.SOURCESYSTEMID, SUM(NVL(ct.LINETOTALAMOUNT,0)) AS TOTAL FROM "
			+ "DIST_PRD_CAT_MATRIX DPM LEFT OUTER JOIN CURR_TRANS CT ON (DPM.FSC_PRD = CT.FSC_PRD AND DPM.primary_product_cat_dscr = "
			+ "CT.primary_product_cat_dscr AND DPM.SOURCESYSTEMID = CT.SOURCESYSTEMID) GROUP BY "
			+ "CUBE(DPM.FSC_PRD,DPM.primary_product_cat_dscr,DPM.SOURCESYSTEMID) ORDER BY 1 ASC, 2 DESC";*/
			
			
	public static final String QUERY_FOR_FISCAL_MONTH_CATEGORIES_SUM="WITH DT AS " +
			"  (SELECT CLD_DT,   FSC_YR,  'FP ' || FSC_PRD AS FSC_PRD   FROM HELIOS_OWN.D_TIME   WHERE to_Number(FSC_YR) =?  AND TM_LVL ='Day'  ),  DIST_PRD AS   (SELECT DISTINCT FSC_PRD FROM DT  ) , "
			+ "  DIST_CATG AS  ( SELECT DISTINCT   CASE     WHEN PRIMARY_PRODUCT_CAT_DSCR IS NULL  THEN 'All Other Products'  WHEN PRIMARY_PRODUCT_CAT_DSCR = 'Toner'   THEN 'Ink ' "
			+ "        || chr(38)    || ' Toner'  ELSE PRIMARY_PRODUCT_CAT_DSCR   END AS PRIMARY_PRODUCT_CAT_DSCR  FROM HELIOS_OWN.SDC_PRODUCT_HIERARCHY  ),  DIST_PRD_CAT_MATRIX AS "
			+ "  (SELECT DP.FSC_PRD,   DC.primary_product_cat_dscr,  SI.SOURCESYSTEMID FROM DIST_PRD DP  INNER JOIN DIST_CATG DC  ON (1=1)  INNER JOIN  (SELECT '102' AS SOURCESYSTEMID FROM DUAL "
			+ " UNION  SELECT '107' AS SOURCESYSTEMID FROM DUAL  ) SI  ON (1=1) ),  CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL  UNION  SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL  UNION "
			+ "  SELECT DISTINCT CHILD_NUMBER AS CUST_NUM " + "  FROM helios_own.SA_PARENT_CHILD "
			+ "  WHERE PARENT_NUMBER = LPAD( ?,10,'0') " + "  UNION "
			+ "  SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM " + "  FROM helios_own.SA_PARENT_CHILD "
			+ "  WHERE PARENT_NUMBER = LPAD( ?,10,'0') " + "  ), " + "  CURR_TRANS AS " + "  (SELECT CF.FSC_YR, "
			+ "  CF.FSC_PRD, " + "    CASE " + "      WHEN PH.PRIMARY_PRODUCT_CAT_DSCR IS NULL "
			+ "  OR STD.productclassnumber        IS NULL " + "      THEN 'All Other Products' "
			+ "  WHEN PH.PRIMARY_PRODUCT_CAT_DSCR = 'Toner' " + "      THEN 'Ink ' " + "        || chr(38) "
			+ "   || ' Toner' " + "      ELSE PH.PRIMARY_PRODUCT_CAT_DSCR "
			+ "  END AS PRIMARY_PRODUCT_CAT_DSCR, " + "    ST.SOURCESYSTEMID, " + "    CASE "
			+ "  WHEN (ST.SOURCESYSTEMID = 102 " + "      AND ST.RECORDTYPE       = '0003') "
			+ "  THEN STD.LINETOTALAMOUNT * -1 " + "      WHEN (ST.SOURCESYSTEMID = 102 "
			+ "  AND ST.RECORDTYPE      != '0003') " + "      THEN STD.LINETOTALAMOUNT "
			+ "  WHEN (ST.SOURCESYSTEMID   = 107 " + "      AND STD.TRANLINESTATUSID IN ('RETURN','SALE')) "
			+ "  THEN STD.EXTENDEDPRICE " + "      ELSE 0 " + "    END AS LINETOTALAMOUNT "
			+ "  FROM CEX01_OWN.SALESTRAN ST " + "  INNER JOIN DT CF "
			+ "  ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) " + "  INNER JOIN CEX01_OWN.SALESTRANDETAIL STD "
			+ "  ON STD.SALESTRANID = ST.SALESTRANID " + "  LEFT OUTER JOIN HELIOS_OWN.SDC_PRODUCT_HIERARCHY PH "
			+ "  ON STD.PRODUCTCLASSNUMBER = PH.CLASS_ID " + "  INNER JOIN CHILD_NUMS CN "
			+ "  ON ( ST.MASTERNUMBER   = CN.CUST_NUM " + "  OR ST.TRANREWARDNUMBER =CN.CUST_NUM) " + "  ) "
			+ "  SELECT DPM.FSC_PRD, " + "  DPM.primary_product_cat_dscr, " + "  DPM.SOURCESYSTEMID, "
			+ "  SUM(NVL(ct.LINETOTALAMOUNT,0)) AS TOTAL " + "FROM DIST_PRD_CAT_MATRIX DPM "
			+ "  LEFT OUTER JOIN CURR_TRANS CT " + "ON (DPM.FSC_PRD                  = CT.FSC_PRD "
			+ "  AND DPM.primary_product_cat_dscr = CT.primary_product_cat_dscr "
			+ "  AND DPM.SOURCESYSTEMID           = CT.SOURCESYSTEMID) "
			+ "  GROUP BY CUBE(DPM.FSC_PRD,DPM.primary_product_cat_dscr,DPM.SOURCESYSTEMID) " + "ORDER BY 1 ASC, "
			+ "  2 DESC";

	
	public static final String QUERY_FOR_CATEGORY_PERCENTAGES="WITH DT AS (SELECT CLD_DT, FSC_YR, 'FP ' || FSC_PRD AS FSC_PRD FROM HELIOS_OWN.D_TIME"
			+ " WHERE TO_NUMBER(FSC_YR) =? AND TM_LVL='Day' ), DIST_CATG AS ( SELECT DISTINCT CASE WHEN PRIMARY_PRODUCT_CAT_DSCR IS NULL THEN "
			+ "'All Other Products' WHEN PRIMARY_PRODUCT_CAT_DSCR = 'Toner' THEN 'Ink ' || chr(38) || ' Toner' ELSE PRIMARY_PRODUCT_CAT_DSCR END AS "
			+ "PRIMARY_PRODUCT_CAT_DSCR FROM HELIOS_OWN.SDC_PRODUCT_HIERARCHY ), DIST_CATG_MATRIX AS (SELECT DC.primary_product_cat_dscr, "
			+ "SI.SOURCESYSTEMID FROM DIST_CATG DC INNER JOIN (SELECT '102' AS SOURCESYSTEMID FROM DUAL UNION SELECT '107' AS SOURCESYSTEMID FROM DUAL ) "
			+ "SI ON (1=1) ), CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION SELECT LPAD(?,10,'0') AS CUST_NUM FROM DUAL UNION "
			+ "SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') UNION SELECT DISTINCT "
			+ "LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE PARENT_NUMBER = LPAD( ?,10,'0') ), CURR_TRANS AS "
			+ "(SELECT CF.FSC_YR, CF.FSC_PRD, CASE WHEN PH.PRIMARY_PRODUCT_CAT_DSCR IS NULL OR STD.productclassnumber IS NULL THEN 'All Other Products' "
			+ "WHEN PH.PRIMARY_PRODUCT_CAT_DSCR = 'Toner' THEN 'Ink ' || chr(38) || ' Toner' ELSE PH.PRIMARY_PRODUCT_CAT_DSCR END AS PRIMARY_PRODUCT_CAT_DSCR, "
			+ "ST.SOURCESYSTEMID, CASE WHEN (ST.SOURCESYSTEMID = 102 AND ST.RECORDTYPE = '0003') THEN STD.LINETOTALAMOUNT * -1 WHEN (ST.SOURCESYSTEMID = 102 "
			+ "AND ST.RECORDTYPE != '0003') THEN STD.LINETOTALAMOUNT WHEN (ST.SOURCESYSTEMID = 107 AND STD.TRANLINESTATUSID IN ('RETURN','SALE')) THEN "
			+ "STD.EXTENDEDPRICE ELSE 0 END AS LINETOTALAMOUNT FROM CEX01_OWN.SALESTRAN ST INNER JOIN DT CF ON TRUNC (ST.ORDERTRANDATE) = TRUNC(CF.CLD_DT) "
			+ "INNER JOIN CEX01_OWN.SALESTRANDETAIL STD ON STD.SALESTRANID = ST.SALESTRANID LEFT OUTER JOIN HELIOS_OWN.SDC_PRODUCT_HIERARCHY PH ON NVL "
			+ "(STD.PRODUCTCLASSNUMBER, 0) = NVL (PH.CLASS_ID, 1) INNER JOIN CHILD_NUMS CN ON ( ST.MASTERNUMBER = CN.CUST_NUM OR"
			+ " ST.TRANREWARDNUMBER =CN.CUST_NUM) ), CURR_TOTALS AS (SELECT DCM.PRIMARY_PRODUCT_CAT_DSCR, DCM.SOURCESYSTEMID, "
			+ "SUM(NVL(CT.LINETOTALAMOUNT,0)) AS CATEGORY_TOTAL FROM DIST_CATG_MATRIX DCM LEFT OUTER JOIN CURR_TRANS CT ON "
			+ "(DCM.primary_product_cat_dscr = CT.primary_product_cat_dscr AND DCM.SOURCESYSTEMID = CT.SOURCESYSTEMID) GROUP BY "
			+ "CUBE(DCM.PRIMARY_PRODUCT_CAT_DSCR,DCM.SOURCESYSTEMID) ) SELECT CTOT.PRIMARY_PRODUCT_CAT_DSCR, CTOT.SOURCESYSTEMID, CTOT.CATEGORY_TOTAL, "
			+ "( CASE WHEN PRIMARY_PRODUCT_CAT_DSCR IS NOT NULL AND SOURCESYSTEMID IS NOT NULL THEN (SELECT CATEGORY_TOTAL FROM CURR_TOTALS CT1 WHERE"
			+ " CT1.primary_product_cat_dscr = CTOT.primary_product_cat_dscr AND CT1.SOURCESYSTEMID IS NULL ) ELSE (SELECT CATEGORY_TOTAL FROM CURR_TOTALS CT1"
			+ " WHERE CT1.primary_product_cat_dscr IS NULL AND CT1.SOURCESYSTEMID IS NULL ) END) AS TOTAL, DECODE(( CASE WHEN PRIMARY_PRODUCT_CAT_DSCR IS"
			+ " NOT NULL AND SOURCESYSTEMID IS NOT NULL THEN (SELECT CATEGORY_TOTAL FROM CURR_TOTALS CT1 WHERE CT1.primary_product_cat_dscr = "
			+ "CTOT.primary_product_cat_dscr AND CT1.SOURCESYSTEMID IS NULL ) ELSE (SELECT CATEGORY_TOTAL FROM CURR_TOTALS CT1 WHERE "
			+ "CT1.primary_product_cat_dscr IS NULL AND CT1.SOURCESYSTEMID IS NULL ) END),0,0,ROUND( (CTOT.CATEGORY_TOTAL/( CASE WHEN PRIMARY_PRODUCT_CAT_DSCR "
			+ "IS NOT NULL AND SOURCESYSTEMID IS NOT NULL THEN (SELECT CATEGORY_TOTAL FROM CURR_TOTALS CT1 WHERE CT1.primary_product_cat_dscr = "
			+ "CTOT.primary_product_cat_dscr AND CT1.SOURCESYSTEMID IS NULL ) ELSE (SELECT CATEGORY_TOTAL FROM CURR_TOTALS CT1 WHERE"
			+ " CT1.primary_product_cat_dscr IS NULL AND CT1.SOURCESYSTEMID IS NULL ) END))*100,2) ) AS CATEGORY_PERCENTAGE FROM CURR_TOTALS CTOT ORDER BY 1,2";
	
	public static final String QUERY_FOR_LATEST_CUSTOMER_ORDER_DATE = "WITH CHILD_NUMS AS (SELECT ? AS CUST_NUM FROM DUAL UNION SELECT "
			+ "LPAD(?,10,'0') AS CUST_NUM FROM DUAL UNION SELECT DISTINCT CHILD_NUMBER AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE "
			+ "PARENT_NUMBER = LPAD( ?,10,'0') UNION SELECT DISTINCT LPAD(CHILD_NUMBER,10,'0') AS CUST_NUM FROM helios_own.SA_PARENT_CHILD WHERE "
			+ "PARENT_NUMBER = LPAD( ?,10,'0') ) SELECT TO_CHAR(MAX(ORDERTRANDATE),'MM-YYYY') AS MAX_DATE FROM CEX01_OWN.SALESTRAN ST INNER "
			+ "JOIN CHILD_NUMS CN ON ( ST.MASTERNUMBER = CN.CUST_NUM OR ST.TRANREWARDNUMBER =CN.CUST_NUM)";
	
}